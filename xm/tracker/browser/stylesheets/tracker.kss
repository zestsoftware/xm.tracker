/* -*-kss-*- (starts file in kss mode) */

/* when 3.0 support will be dropped, the new way to provide form vars will
     be one line, like this:

       action-server: kss_track_time currentForm();
*/

.track-time:click {
    action-server: kss_track_time;
    kss_track_time-kssSubmitForm: currentForm();
    evt-click-preventdefault: true;
}

.track-time:timer-reset(mytimer) {
}


/* Selecting and adding tasks (=overlay) */

#select-tasks:click {
    action-client: setStyle css(div#overlay);
    setStyle-name: display;
    setStyle-value: block;
    action-server: kss_select_tasks;
    evt-click-preventdefault: true;
}

#cancel_add_tasks:click {
    action-client: setStyle css(div#overlay);
    setStyle-name: display;
    setStyle-value: none;
    action-client: deleteNode css(div#task_selection_form);
}


/* Edit entries (time and text) */

.edit-entries-save:click{
    action-server: kss_edit_entry;
    kss_edit_entry-kssSubmitForm: currentForm();
    evt-click-preventdefault: true;
    action-client: removeClass parentnode('form');
    removeClass-value: edit-in-progress;
    action-client: removeAttribute;
    removeAttribute-kssSelector: css('.book-button');
    removeAttribute-name: disabled;
}

.entry_text_time_edit:keypress,
.entry_text_time_edit:keydown {
    evt-keypress-preventdefault: true;
    evt-keypress-keycodes: 13;
    evt-keydown-preventdefault: true;
    evt-keydown-keycodes: 13;
}

.entry_text_time_edit:focus {
    action-client: addClass parentnode('form');
    addClass-value: edit-in-progress;
    action-client: setAttribute;
    setAttribute-kssSelector: css('.book-button');
    setAttribute-name: disabled;
    setAttribute-value: disabled;
}

.entry_text_time_edit:keyup {
    evt-keyup-preventdefault: true;
    evt-keyup-keycodes: 13;
    action-server: kss_edit_entry;
    kss_edit_entry-kssSubmitForm: currentForm();
    action-client: removeClass parentnode('form');
    removeClass-value: edit-in-progress;
    action-client: removeAttribute;
    removeAttribute-kssSelector: css('.book-button');
    removeAttribute-name: disabled;
}

.edit-entries-cancel:click,
.edit-entries input:keypress(inlineescape) {
    evt-click-preventdefault: true;
    evt-keypress-keycodes: 27;
    action-client: removeClass parentnode('form');
    removeClass-value: edit-in-progress;
    action-client: removeAttribute;
    removeAttribute-kssSelector: css('.book-button');
    removeAttribute-name: disabled;
    action-client: focus htmlid('defocus_target');
}

/* Client side timer */

#start-timer:timer-start(mytimer) {
    evt-timer-start-displayformat_nohours: '%0M:%0S';
    evt-timer-start-displayformat_hours: '%h:%0M:%0S';
    evt-timer-start-preventdefault: true;
    action-server: kss_start_timer;
    action-client: removeAttribute;
    removeAttribute-kssSelector: css('.track_form input.track-time');
    removeAttribute-name: disabled;
}

#stop-timer:timer-stop(mytimer) {
    action-server: kss_stop_timer;
    evt-timer-stop-preventdefault: true;
    action-client: setAttribute;
    setAttribute-kssSelector: css('.track_form input.track-time');
    setAttribute-name: disabled;
    setAttribute-value: disabled;
}

#timer:timer-update(mytimer) {
    action-client: log;
    log-message: pass(seconds);
}


/* Collapse and expand task details */

.task-title:click {
    action-client: toggleClass;
    toggleClass-kssSelector: htmlid(kssAttr(taskdiv));
    toggleClass-value: task-details-expanded;
}


/* Book unassigned entries to tasks */

.book_to_task_submit:click {
    action-client: setStyle css(div#overlay);
    setStyle-name: display;
    setStyle-value: block;
    kss_select_tasks_for_unassigned-kssSubmitForm: currentForm();
    action-server: kss_select_tasks_for_unassigned;
    evt-click-preventdefault: true;
}
